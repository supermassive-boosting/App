{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain } from 'electron';\nimport { release } from 'node:os';\nimport { join, dirname } from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nglobalThis.__filename = fileURLToPath(import.meta.url);\nglobalThis.__dirname = dirname(__filename);\n\nprocess.env.DIST_ELECTRON = join(__dirname, '..');\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist');\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST;\n\nif (release().startsWith('6.1')) app.disableHardwareAcceleration();\n\nif (process.platform === 'win32') app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\nlet win: BrowserWindow | null = null;\nconst url = process.env.VITE_DEV_SERVER_URL;\nconst indexHtml = join(process.env.DIST, 'index.html');\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'Main window',\n    icon: join(process.env.VITE_PUBLIC, 'favicon.ico'),\n    autoHideMenuBar: true,\n    width: 1600,\n    height: 900,\n    resizable: false,\n    webPreferences: {\n      nodeIntegration: true,\n      // contextIsolation: false,\n    },\n  });\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    win.loadURL(url);\n    // win.webContents.openDevTools();\n  } else {\n    win.loadFile(indexHtml);\n  }\n\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url);\n    return { action: 'deny' };\n  });\n  // win.webContents.on('will-navigate', (event, url) => { }) #344\n}\n\napp.whenReady().then(createWindow);\n\napp.on('window-all-closed', () => {\n  win = null;\n  if (process.platform !== 'darwin') app.quit();\n});\n\napp.on('second-instance', () => {\n  if (win) {\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  });\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`);\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg });\n  }\n});\n"],"names":["url"],"mappings":";;;;AAKA,WAAW,aAAa,cAAc,YAAY,GAAG;AACrD,WAAW,YAAY,QAAQ,UAAU;AAEzC,QAAY,IAAA,gBAAgB,KAAK,WAAW,IAAI;AAChD,QAAA,IAAY,OAAO,KAAK,QAAY,IAAA,eAAe,SAAS;AAC5D,QAAY,IAAA,cAAc,YAAY,sBAClC,KAAK,YAAY,eAAe,WAAW,IAC3C,QAAY,IAAA;AAEhB,IAAI,UAAU,WAAW,KAAK,OAAO,4BAA4B;AAEjE,IAAI,QAAQ,aAAa,aAAa,kBAAkB,IAAI,SAAS;AAErE,IAAI,CAAC,IAAI,6BAA6B;AACpC,MAAI,KAAK;AACT,UAAQ,KAAK,CAAC;AAChB;AAEA,IAAI,MAA4B;AAChC,MAAM,MAAM,QAAY,IAAA;AACxB,MAAM,YAAY,KAAK,QAAY,IAAA,MAAM,YAAY;AAErD,eAAe,eAAe;AAC5B,QAAM,IAAI,cAAc;AAAA,IACtB,OAAO;AAAA,IACP,MAAM,KAAK,QAAY,IAAA,aAAa,aAAa;AAAA,IACjD,iBAAiB;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,gBAAgB;AAAA,MACd,iBAAiB;AAAA;AAAA,IAEnB;AAAA,EAAA,CACD;AAEG,MAAA,YAAY,qBAAqB;AACnC,QAAI,QAAQ,GAAG;AAAA,EAAA,OAEV;AACL,QAAI,SAAS,SAAS;AAAA,EACxB;AAEA,MAAI,YAAY,qBAAqB,CAAC,EAAE,KAAAA,WAAU;AAChD,QAAIA,KAAI,WAAW,QAAQ,EAAG,OAAM,aAAaA,IAAG;AAC7C,WAAA,EAAE,QAAQ;EAAO,CACzB;AAEH;AAEA,IAAI,UAAY,EAAA,KAAK,YAAY;AAEjC,IAAI,GAAG,qBAAqB,MAAM;AAC1B,QAAA;AACN,MAAI,QAAQ,aAAa,SAAU,KAAI,KAAK;AAC9C,CAAC;AAED,IAAI,GAAG,mBAAmB,MAAM;AAC9B,MAAI,KAAK;AACP,QAAI,IAAI,YAAA,EAAe,KAAI,QAAQ;AACnC,QAAI,MAAM;AAAA,EACZ;AACF,CAAC;AAED,IAAI,GAAG,YAAY,MAAM;AACjB,QAAA,aAAa,cAAc;AACjC,MAAI,WAAW,QAAQ;AACV,eAAA,CAAC,EAAE;EAAM,OACf;AACQ;EACf;AACF,CAAC;AAED,QAAQ,OAAO,YAAY,CAAC,GAAG,QAAQ;AAC/B,QAAA,cAAc,IAAI,cAAc;AAAA,IACpC,gBAAgB;AAAA,MACd,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,IACpB;AAAA,EAAA,CACD;AAEG,MAAA,YAAY,qBAAqB;AACnC,gBAAY,QAAQ,GAAG,GAAG,IAAI,GAAG,EAAE;AAAA,EAAA,OAC9B;AACL,gBAAY,SAAS,WAAW,EAAE,MAAM,IAAK,CAAA;AAAA,EAC/C;AACF,CAAC;"}